================================================================================
Variable Declaration
================================================================================

var foo;
var bar = 1;

--------------------------------------------------------------------------------

(source_file
  (variable_declaration
    name: (identifier))
  (variable_declaration
    name: (identifier)
    initialiser: (number)))

================================================================================
Function Declaration - No Parameters
================================================================================

fun greet() {
    print "Hello, World!";
}

--------------------------------------------------------------------------------

(source_file
  (function_declaration
    name: (identifier)
    parameters: (parameter_list)
    body: (block
      (print_statement
        (string)))))

================================================================================
Function Declaration - One Parameter
================================================================================

fun id(x) {
    return x;
}

--------------------------------------------------------------------------------

(source_file
  (function_declaration
    name: (identifier)
    parameters: (parameter_list
      (identifier))
    body: (block
      (return_statement
        (identifier)))))

================================================================================
Function Declaration - Two Parameters
================================================================================

fun add(x, y) {
    return x + y;
}

--------------------------------------------------------------------------------

(source_file
  (function_declaration
    name: (identifier)
    parameters: (parameter_list
      (identifier)
      (identifier))
    body: (block
      (return_statement
        (binary_expression
          left: (identifier)
          right: (identifier))))))

================================================================================
Function Declaration - Nested
================================================================================

fun add(x) {
    fun add(y) {
        return x + y;
    }
    return add;
}

--------------------------------------------------------------------------------

(source_file
  (function_declaration
    name: (identifier)
    parameters: (parameter_list
      (identifier))
    body: (block
      (function_declaration
        name: (identifier)
        parameters: (parameter_list
          (identifier))
        body: (block
          (return_statement
            (binary_expression
              left: (identifier)
              right: (identifier)))))
      (return_statement
        (identifier)))))

================================================================================
Function Declaration - No Body
================================================================================

fun add(x)

--------------------------------------------------------------------------------

(source_file
  (function_declaration
    name: (identifier)
    parameters: (parameter_list
      (identifier))))

================================================================================
Class Declaration - Empty
================================================================================

class Point {}

--------------------------------------------------------------------------------

(source_file
  (class_declaration
    name: (identifier)
    body: (class_body)))

================================================================================
Class Declaration - One Method - No Parameters
================================================================================

class Breakfast {
    cook() {
        print "Cooking breakfast!";
    }
}

--------------------------------------------------------------------------------

(source_file
  (class_declaration
    name: (identifier)
    body: (class_body
      (method_declaration
        name: (identifier)
        parameters: (parameter_list)
        body: (block
          (print_statement
            (string)))))))

================================================================================
Class Declaration - One Method - One Parameter
================================================================================

class Breakfast {
    serve(who) {
        print "Enjoy your breakfast, " + who + ".";
    }
}

--------------------------------------------------------------------------------

(source_file
  (class_declaration
    name: (identifier)
    body: (class_body
      (method_declaration
        name: (identifier)
        parameters: (parameter_list
          (identifier))
        body: (block
          (print_statement
            (binary_expression
              left: (binary_expression
                left: (string)
                right: (identifier))
              right: (string))))))))

================================================================================
Class Declaration - One Method - Two Parameters
================================================================================

class Breakfast {
    serve(what, who) {
        print "Enjoy your " + what + ", " + who + ".";
    }
}

--------------------------------------------------------------------------------

(source_file
  (class_declaration
    name: (identifier)
    body: (class_body
      (method_declaration
        name: (identifier)
        parameters: (parameter_list
          (identifier)
          (identifier))
        body: (block
          (print_statement
            (binary_expression
              left: (binary_expression
                left: (binary_expression
                  left: (binary_expression
                    left: (string)
                    right: (identifier))
                  right: (string))
                right: (identifier))
              right: (string))))))))

================================================================================
Class Declaration - Two Methods
================================================================================

class Breakfast {
    cook() {
        print "Eggs a-fryin'!";
    }

    serve() {
        print "Enjoy your breakfast.";
    }
}

--------------------------------------------------------------------------------

(source_file
  (class_declaration
    name: (identifier)
    body: (class_body
      (method_declaration
        name: (identifier)
        parameters: (parameter_list)
        body: (block
          (print_statement
            (string))))
      (method_declaration
        name: (identifier)
        parameters: (parameter_list)
        body: (block
          (print_statement
            (string)))))))

================================================================================
Class Declaration - Init Method
================================================================================

class Person {
    init(name) {
        this.name = name;
    }
}

--------------------------------------------------------------------------------

(source_file
  (class_declaration
    name: (identifier)
    body: (class_body
      (method_declaration
        name: (identifier)
        parameters: (parameter_list
          (identifier))
        body: (block
          (expression_statement
            (assignment_expression
              left: (get_expression
                object: (this_expression)
                name: (identifier))
              right: (identifier))))))))

================================================================================
Class Declaration - Static Method
================================================================================

class Math {
    static square(n) {
        return n * n;
    }
}

--------------------------------------------------------------------------------

(source_file
  (class_declaration
    name: (identifier)
    body: (class_body
      (method_declaration
        (modifiers)
        name: (identifier)
        parameters: (parameter_list
          (identifier))
        body: (block
          (return_statement
            (binary_expression
              left: (identifier)
              right: (identifier))))))))

================================================================================
Class Declaration - Getter
================================================================================

class Circle {
    get area() {
        return (PI * this.radius) * this.radius;
    }
}

--------------------------------------------------------------------------------

(source_file
  (class_declaration
    name: (identifier)
    body: (class_body
      (method_declaration
        (modifiers)
        name: (identifier)
        parameters: (parameter_list)
        body: (block
          (return_statement
            (binary_expression
              left: (group_expression
                expression: (binary_expression
                  left: (identifier)
                  right: (get_expression
                    object: (this_expression)
                    name: (identifier))))
              right: (get_expression
                object: (this_expression)
                name: (identifier)))))))))

================================================================================
Class Declaration - Setter
================================================================================

class Circle {
    set radius(value) {
        if (value <= 0) {
            error("Circle radius must be positive.");
        }
        this._radius = value;
    }
}

--------------------------------------------------------------------------------

(source_file
  (class_declaration
    name: (identifier)
    body: (class_body
      (method_declaration
        (modifiers)
        name: (identifier)
        parameters: (parameter_list
          (identifier))
        body: (block
          (if_statement
            condition: (binary_expression
              left: (identifier)
              right: (number))
            then: (block
              (expression_statement
                (call_expression
                  callee: (identifier)
                  arguments: (argument_list
                    (string))))))
          (expression_statement
            (assignment_expression
              left: (get_expression
                object: (this_expression)
                name: (identifier))
              right: (identifier))))))))

================================================================================
Class Declaration - Static Getter and Setter
================================================================================

class Foo {
    static get bar() {}
    static set baz(value) {}
}

--------------------------------------------------------------------------------

(source_file
  (class_declaration
    name: (identifier)
    body: (class_body
      (method_declaration
        (modifiers)
        name: (identifier)
        parameters: (parameter_list)
        body: (block))
      (method_declaration
        (modifiers)
        name: (identifier)
        parameters: (parameter_list
          (identifier))
        body: (block)))))
